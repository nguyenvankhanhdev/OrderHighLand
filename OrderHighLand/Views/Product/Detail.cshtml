@{
    ViewData["Title"] = "Home Page";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main class="main-content">

    <div class="single-product-area section-space-top-100">
        <div class="container">
            @foreach (var item in ViewBag.ProductVariantsWithProducts)
            {
                <div data-product-id="@item.Product.Id" class="modal-wrap row">
                    <div class="col-lg-6">
                        <div class="modal-img">
                            <div class="swiper-container modal-slider">
                                <div class="swiper-wrapper ">
                                    <div class="swiper-slide">
                                        <a href="#" class="single-img">
                                            <img class="img-full"
                                                 src="~/imgs/@item.Product.Image"
                                                 alt="Product Image">
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 pt-9 pt-lg-0">
                        <div class="single-product-content">
                            <h2 class="title mb-3">@item.Product.Name</h2>

                            <div class="price-box pb-3">
                                @{
                                    bool firstPriceDisplayed = false; // Biến cờ để kiểm tra xem giá đầu tiên đã hiển thị chưa
                                }
                                @foreach (var proSize in ViewBag.ProSize)
                                {
                                    if (proSize.ProductVariant.Pro_Id == @item.Product.Id)
                                    {
                                        if (!firstPriceDisplayed) // Chỉ hiển thị giá đầu tiên
                                        {
                                            <span data-size="@proSize.Size.Size" id="ProSize_@proSize.Size.Id" class="new-price text-danger">Giá: @proSize.ProductVariant.Price đ</span>
                                            firstPriceDisplayed = true; // Đánh dấu đã hiển thị giá đầu tiên
                                        }
                                        else
                                        {
                                            <span data-size="@proSize.Size.Size" id="ProSize_@proSize.Size.Id" class="new-price text-danger" style="display:none;">Giá: @proSize.ProductVariant.Price đ</span>
                                        }
                                    }
                                }
                            </div>
                            <p class="ChooseSize">Chọn size (bắt buộc)</p>

                            <div class="ListSize" data-product-id="@item.Product.Id">
                                @{
                                    bool isFirstSize = true; // Biến cờ để kiểm tra kích thước đầu tiên
                                }
                                @foreach (var proSize in ViewBag.ProSize)
                                {
                                    if (proSize.ProductVariant.Pro_Id == @item.Product.Id)
                                    {
                                        <div data-sizeid="@proSize.Size.Id" id="ProSize_@proSize.Size.Id" class="prosize-item">
                                            <input data-product-id="@item.Product.Id" class="prosize-checkbox" type="checkbox" name="size"
                                                   id="ChkSize_@proSize.Size.Id" value="@proSize.Size.Size"
                                            @(isFirstSize ? "checked" : "") /> <!-- Đặt checked cho checkbox đầu tiên -->
                                            <label class="prosize-label" for="ChkSize_@proSize.Size.Id">
                                                @{
                                                    // Khởi tạo giá mặc định
                                                    string priceText = $"{proSize.Size.Size} + 10000đ";

                                                    // Nếu kích thước là "S", thay đổi giá
                                                    if (proSize.Size.Size == "S")
                                                    {
                                                        priceText = "Nhỏ + 0 đ";
                                                    }
                                                    if (proSize.Size.Size == "M")
                                                    {
                                                        priceText = "Vừa + 10.000 đ";
                                                    }
                                                    if (proSize.Size.Size == "L")
                                                    {
                                                        priceText = "Lớn + 20.000 đ";
                                                    }
                                                }
                                                @priceText
                                            </label>
                                        </div>

                                        // Đánh dấu rằng đã hiển thị kích thước đầu tiên
                                        isFirstSize = false;
                                    }
                                }
                            </div>
                            <p class="ChooseTopping">Topping</p>
                            <div class="ListTopping">
                                @foreach (var topping in ViewBag.Toppings)
                                {
                                    <div class="item_topping">
                                        <input data-toppingid="@topping.Id" type="checkbox" id="topping_@(topping.Id)_@(item.Product.Id)" class="topping-checkbox" value="@topping.Price" data-product-id="@item.Product.Id">
                                        <label for="topping_@(topping.Id)_@(item.Product.Id)" class="topping-label">
                                            @topping.Name + @topping.Price đ
                                        </label>
                                    </div>
                                }
                            </div>
                            <ul class="quantity-with-btn pb-9">
                                <li class="quantity">
                                    <div class="cart-plus-minus">
                                        <input class="cart-plus-minus-box" value="1" type="text">
                                    </div>
                                </li>
                                <li class="add-to-cart">
                                    <a data-product-id="@item.Product.Id" class="btn btn-custom-size lg-size btn-primary" href="javascript:void(0);" id="addToCartBtn">
                                        Add to
                                        cart
                                    </a>
                                </li>
                                <li class="wishlist-btn-wrap">
                                    <a class="custom-circle-btn" href="wishlist.html">
                                        <i class="pe-7s-like"></i>
                                    </a>
                                </li>

                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>


</main>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById('searchInput');
        const productItems = document.querySelectorAll('.product-item');

        const normalizeText = (text) => {
            return text.toLowerCase()
                .normalize("NFD")
                .replace(/[\u0300-\u036f]/g, "")
                .replace(/\s/g, "");
        };

        searchInput.addEventListener('input', function () {
            const searchText = normalizeText(searchInput.value);

            productItems.forEach(item => {
                const productName = normalizeText(item.querySelector('.product-name').innerText);
                if (productName.includes(searchText)) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        });
    });







    document.addEventListener("DOMContentLoaded", function () {
        // Lấy tất cả các sản phẩm
        const products = document.querySelectorAll('.single-product-content');

        products.forEach(product => {
            // Lấy tất cả các checkbox và span giá trong sản phẩm hiện tại
            const checkboxes = product.querySelectorAll('input[type="checkbox"][name="size"]');
            const priceSpans = product.querySelectorAll('.new-price');
            const toppingCheckboxes = product.querySelectorAll('.topping-checkbox');

            // Đối tượng để lưu giá của các kích thước
            const sizePrices = {};
            let currentBasePrice = 0;

            // Lưu giá của từng kích thước
            priceSpans.forEach(span => {
                const size = span.getAttribute('data-size');
                const price = parseInt(span.textContent.replace('Giá: ', '').replace(' đ', ''), 10);
                sizePrices[size] = price; // Lưu giá vào đối tượng
            });

            // Thiết lập kích thước mặc định khi trang tải
            const defaultSize = checkboxes[0];
            if (defaultSize) {
                defaultSize.checked = true; // Chọn size đầu tiên mặc định
                const selectedSize = defaultSize.value;
                currentBasePrice = sizePrices[selectedSize]; // Gán giá trị mặc định

                // Hiển thị giá của kích thước mặc định
                priceSpans.forEach(span => {
                    if (span.getAttribute('data-size') === selectedSize) {
                        span.style.display = 'block';
                    } else {
                        span.style.display = 'none';
                    }
                });

                // Cập nhật giá với giá trị mặc định
                updatePrice();
            }

            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function (event) {
                    // Kiểm tra xem checkbox có đang được checked không
                    if (this.checked) {
                        // Bỏ chọn tất cả các checkbox khác trong cùng sản phẩm này
                        checkboxes.forEach(cb => {
                            if (cb !== this) {
                                cb.checked = false;
                            }
                        });

                        // Lấy giá của kích thước đã chọn
                        const selectedSize = this.value;
                        currentBasePrice = sizePrices[selectedSize]; // Cập nhật giá cơ bản
                        priceSpans.forEach(span => {
                            if (span.getAttribute('data-size') === selectedSize) {
                                span.style.display = 'block'; // Hiển thị span giá
                            } else {
                                span.style.display = 'none'; // Ẩn span giá khác
                            }
                        });

                        // Cập nhật giá hiển thị ngay
                        updatePrice();
                    } else {
                        // Kiểm tra nếu không có checkbox nào đang được chọn trong sản phẩm này
                        const anyChecked = [...checkboxes].some(cb => cb.checked);

                        // Nếu không có checkbox nào được chọn, giữ lại checkbox hiện tại
                        if (!anyChecked) {
                            event.preventDefault();
                            this.checked = true; // Giữ trạng thái checked
                        }
                    }
                });
            });

            // Thêm sự kiện cho các topping checkbox
            toppingCheckboxes.forEach(topping => {
                topping.addEventListener('change', function () {
                    updatePrice();
                });
            });

            // Hàm cập nhật giá
            function updatePrice() {
                let totalToppingPrice = 0;

                // Tính tổng giá của toppings
                toppingCheckboxes.forEach(topping => {
                    if (topping.checked) {
                        totalToppingPrice += parseInt(topping.value, 10);
                    }
                });

                // Cập nhật giá hiển thị
                const totalPrice = currentBasePrice + totalToppingPrice;
                priceSpans.forEach(span => {
                    if (span.style.display === 'block') {
                        span.textContent = `Giá: ${totalPrice} đ`;
                    }
                });
            }
        });
    });



    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('sortSelection').addEventListener('change', function () {
            console.log("Đã thay đổi lựa chọn sắp xếp."); // Kiểm tra xem sự kiện có chạy hay không
            let sortOption = this.value;
            let productGrid = document.getElementById('productGrid');
            let products = Array.from(productGrid.getElementsByClassName('oneProduct'));

            // Sắp xếp theo tùy chọn
            if (sortOption === '2') {
                // Sort by High Price
                products.sort(function (a, b) {
                    let priceA = parseFloat(a.querySelector('[data-price]').getAttribute('data-price'));
                    let priceB = parseFloat(b.querySelector('[data-price]').getAttribute('data-price'));
                    return priceB - priceA; // Giá từ cao đến thấp
                });
            } else if (sortOption === '3') {
                // Sort by Low Price
                products.sort(function (a, b) {
                    let priceA = parseFloat(a.querySelector('[data-price]').getAttribute('data-price'));
                    let priceB = parseFloat(b.querySelector('[data-price]').getAttribute('data-price'));
                    return priceA - priceB; // Giá từ thấp lên cao
                });
            } else {
                // Default sorting (Mặc định)
                products.sort(function (a, b) {
                    return parseInt(a.getAttribute('data-index')) - parseInt(b.getAttribute('data-index'));
                });
            }

            // Xóa sản phẩm cũ và thêm sản phẩm đã được sắp xếp vào lại danh sách
            productGrid.innerHTML = '';
            products.forEach(function (product) {
                productGrid.appendChild(product);
            });
        });
    });




</script>

<script>
    @* thêm vào giỏ hàng *@
        $(document).ready(function () {
            $('.add-to-cart').on('click', 'a', function () {
                // Lấy Product ID từ data-product-id
                var productId = $('.modal-wrap:visible').data('product-id');

                console.log('Product ID:', productId);
                // Lấy giá từ thẻ có class new-price
                var productPrice = $('.new-price:visible').text().replace('Giá: ', '').replace(' đ', '').trim();

                // Lấy Size ID đang chọn
                var selectedSizeId = $('.ListSize[data-product-id="' + productId + '"] input.prosize-checkbox:checked')
                    .closest('.prosize-item')
                    .data('sizeid');

                console.log('Selected Size ID:', selectedSizeId);
                // Lấy danh sách Topping ID đang chọn
                var selectedToppings = [];
                $('input.topping-checkbox:checked').each(function () {
                    // Chỉ thêm topping nếu thuộc về sản phẩm hiện tại
                    if ($(this).data('product-id') == productId) {
                        selectedToppings.push($(this).data('toppingid'));
                    }
                });

                // Lấy số lượng từ thẻ input có class cart-plus-minus-box
                var quantity = $(this).closest('.quantity-with-btn').find('.cart-plus-minus-box').val();


                // Gửi dữ liệu đến CartController qua AJAX
                $.ajax({
                    url: '/Cart/AddItemToCart',  // Đường dẫn đến hàm trong CartController
                    type: 'POST',
                    data: {
                        productId: productId,
                        price: productPrice,
                        sizeId: selectedSizeId,
                        toppings: selectedToppings,
                        quantity: quantity
                    },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            // Cập nhật số lượng cart
                            updateCartCount();// Thông báo thành công
                        } else if (response.redirect) {
                            alert(response.message);
                            window.location.href = response.redirectUrl; // Chuyển hướng sau một khoảng thời gian

                            ;
                        }
                        else {
                            showNotification(response.message, 'error');  // Thông báo yêu cầu đăng nhập
                        }
                    },
                    error: function (xhr, status, error) {
                        // Xử lý lỗi nếu có
                        console.log('Lỗi:', error);
                        alert('Có lỗi xảy ra khi thêm vào giỏ hàng.');
                    }
                });
            });
        });
</script>